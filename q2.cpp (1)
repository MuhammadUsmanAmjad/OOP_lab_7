#include<iostream>
using namespace std;
class  matrix
{
private:
	int**mtrx;
	
public:
	int rows;
	int cols;
	void print();
	 matrix();
	 
//	~ matrix();
	matrix operator+(matrix&);
   matrix operator-(matrix&);
    matrix operator*(matrix&);
    friend istream&operator>>(istream&o,matrix&obj);
    friend ostream&operator<<(ostream&o,matrix&obj);
};
matrix matrix::operator+(matrix&m)
{
	matrix temp;
	if((rows!=m.rows)||(cols!=m.cols))
	{
		cout<<"Addition not possible"<<endl;
		exit(0);
	}
	else
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				temp.mtrx[i][j]=mtrx[i][j]+m.mtrx[i][j];
			}
		}
    return temp;
}
matrix matrix::operator-(matrix&m)
{
	matrix temp;
	if((rows!=m.rows)||(cols!=m.cols))
	{
		cout<<"Subtraction not possible"<<endl;
		exit(0);
	}
	else
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<cols;j++)
			{
				temp.mtrx[i][j]=mtrx[i][j]-m.mtrx[i][j];
			}
		}
		return temp;
}
matrix matrix::operator*(matrix&m)
{
	matrix temp;
	if(cols!=m.rows)
	{
		cout<<"Multipliation not possible"<<endl;
		exit(0);
	}
	else
	
		for(int i = 0; i < rows; ++i)
        for(int j = 0; j < cols; ++j)
        {
            temp.mtrx[i][j]=0;
        }
		for(int i = 0; i < rows; ++i)
		{
        for(int j = 0; j < cols; ++j)
        {
            for(int k = 0; k < cols; ++k)
            {
                temp.mtrx[i][j] += mtrx[i][k] * m.mtrx[k][j];
            }
        }
    }
    return temp;
			
}

matrix::matrix()
{
	cout<<"Enter row and col : "<<endl;
	cin>>rows;
	cols=rows;
	
	mtrx=new int*[rows];
	for(int i=0;i<rows;i++)
	{
		mtrx[i]=new int[cols];
	}
	
}
//matrix::~ matrix()
//{
//	cout<<"Destructor called"<<endl;
//    for(int i=0;i<rows;i++)
//	{
//		delete mtrx[i];
//	}
//	delete[]mtrx;
//}
 istream&operator>>(istream&o,matrix&obj)
{
	for(int i=0;i<obj.rows;i++)
	{
		for(int j=0;j<obj.cols;j++)
		{
			o>>obj.mtrx[i][j];
		}
		cout<<endl;
		
	}
	return o;
}
ostream&operator<<(ostream&o,matrix&obj)
{
	cout<<"\noutput is:\n";
	for(int i=0;i<obj.rows;i++)
	{
		for(int j=0;j<obj.cols;j++)
		{
			cout<<" "<<obj.mtrx[i][j];
		}
		cout<<endl;
	}
}
int main()
{
	matrix _matrix;
	cout<<"\nenter matrix1:\n";
	cin>>_matrix;
	matrix _matrix2;
	cout<<"\nenter matrix2:\n";
	cin>>_matrix2;
	matrix _matrix3;
	_matrix3=_matrix+_matrix2;
	cout<<"addition of 2 matrices is:"<<endl;
	cout<<_matrix3;
	_matrix3=_matrix - _matrix2;
	cout<<"subtraction of of 2 matrices is:"<<endl;
	cout<<_matrix3;
	_matrix3=_matrix * _matrix2;
	cout<<"multiplication of of 2 matrices is:"<<endl;
	cout<<_matrix3;
	return 0;
	system("pause");
	return 0;
}